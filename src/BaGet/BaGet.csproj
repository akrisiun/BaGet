<Project Sdk="Microsoft.NET.Sdk.Web">

  <PropertyGroup>
    <TargetFramework>netcoreapp3.1</TargetFramework>
    <IsPackable>false</IsPackable>
    <AspNetCoreHostingModel>OutOfProcess</AspNetCoreHostingModel>
    <!-- InProcess -->
    
    <SpaRoot>..\BaGet.UI\</SpaRoot>
    <DefaultItemExcludes>$(DefaultItemExcludes);$(SpaRoot)node_modules\**</DefaultItemExcludes>
  </PropertyGroup>

  <ItemGroup>
    <Compile Remove="Entities\**" />
    <Content Remove="Entities\**" />
    <EmbeddedResource Remove="Entities\**" />
    <None Remove="Entities\**" />
  </ItemGroup>

  <ItemGroup>
    <!-- <FrameworkReference Include="Microsoft.AspNetCore.App" /> -->
    <PackageReference Include="Microsoft.AspNetCore.SpaServices" Version="3.1.11" />
    <PackageReference Include="Microsoft.AspNetCore.SpaServices.Extensions" Version="3.1.11" />
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="McMaster.Extensions.CommandLineUtils" Version="2.3.2" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\BaGet.Core\BaGet.Core.csproj" />
    <ProjectReference Include="..\BaGet.Core.Server\BaGet.Core.Server.csproj" />
    <ProjectReference Include="..\BaGet.Database.MySql\BaGet.Database.MySql.csproj" />
    <ProjectReference Include="..\BaGet.Database.Sqlite\BaGet.Database.Sqlite.csproj" />
    <ProjectReference Include="..\BaGet.Database.SqlServer\BaGet.Database.SqlServer.csproj" />
    <ProjectReference Include="..\BaGet.Protocol\BaGet.Protocol.csproj" />
  </ItemGroup>

  <Target Name="DebugEnsureNodeEnv" BeforeTargets="Build" Condition=" '$(Configuration)' == 'Debug' And !Exists('$(SpaRoot)node_modules') ">
    <!-- Ensure Node.js is installed -->
    <Exec Command="node --version" ContinueOnError="true">
      <Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
    </Exec>
    <Error Condition="'$(ErrorCode)' != '0'" Text="Node.js is required to build and run this project. To continue, please install Node.js from https://nodejs.org/, and then restart your command prompt or IDE." />
    <Message Importance="high" Text="Restoring dependencies using 'npm'. This may take several minutes..." />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
  </Target>

  <Target Name="PublishRunWebpack" AfterTargets="ComputeFilesToPublish">
    <!-- As part of publishing, ensure the JS resources are freshly built in production mode -->
    <Exec WorkingDirectory="$(SpaRoot)" Command="yarn" />
    <Exec WorkingDirectory="$(SpaRoot)" Command="yarn build" />

    <!-- Include the newly-built files in the publish output -->
    <ItemGroup>
      <DistFiles Include="$(SpaRoot)build\**" />
      <ResolvedFileToPublish Include="@(DistFiles->'%(FullPath)')" Exclude="@(ResolvedFileToPublish)">
        <!-- Because the root is relative and has ..\, the "Workaround" folder just tricks msbuild to put
          the files where we want them. Otherwise they would be placed up a directory under the BaGet folder. -->
        <RelativePath>Workaround\%(DistFiles.Identity)</RelativePath>
        <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
      </ResolvedFileToPublish>
    </ItemGroup>
  </Target>

</Project>
